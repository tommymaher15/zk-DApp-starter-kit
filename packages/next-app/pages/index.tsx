import { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/styles.module.css';
import { ConnectButton } from "@rainbow-me/rainbowkit";
import React, { useState, FormEvent } from 'react';

interface HomeProps {}

const Home: NextPage<HomeProps> = () => {
  const [claimedBalance, setClaimedBalance] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);

  async function handleSubmit(event: FormEvent<HTMLFormElement>) {
    event.preventDefault();
    setIsSubmitting(true);

    try {
      // TODO: Implement ZKP logic here

      // Simulate a delay for demonstration purposes
      await new Promise((resolve) => setTimeout(resolve, 2000));

      // Display verification result
      alert('Token balance proof verified successfully!');
    } catch (error) {
      console.error(error);
      alert('Token balance proof verification failed.');
    } finally {
      setIsSubmitting(false);
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>ZKP test</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>


        <div
          style={{
            height: "10vh",
            display: "flex",
            alignItems: "center",
            justifyContent: "center"
          }}
        >
          <form onSubmit={handleSubmit}>
            <label>
              Claimed Token Balance:
              <input
                type="number"
                value={claimedBalance}
                onChange={(e) => setClaimedBalance(e.target.value)}
                required
              />
            </label>
            <br />
            <button type="submit" disabled={isSubmitting}>
              {isSubmitting ? 'Verifying...' : 'Verify'}
            </button>
            
          <ConnectButton />
          </form>
        </div>

        <div className={styles.grid}>
          {/* You can add more content here if needed */}
        </div>
      </main>

      <footer className={styles.footer}>
        {/* Footer content */}
      </footer>
    </div>
  );
};

export default Home;
